{"version":3,"sources":["Components/Login/Login.module.css","Components/Header/Header.module.css","Components/Login/Login.tsx","store/actions/authActions.ts","api/instance.ts","api/auth.ts","store/reducers/authReducer.ts","Components/Login/LoginContainer.tsx","api/todo.ts","store/actions/todoActions.ts","store/reducers/todoReducer.ts","Components/SVG/DeleteIcon.tsx","Components/Task/Task.tsx","Components/SVG/NoData.tsx","Components/TodoList/TodoList.tsx","Components/SVG/CreateIcon.tsx","Components/SVG/LogoutIcon.tsx","Components/Header/Header.tsx","Components/App.tsx","reportWebVitals.ts","store/reducers/rootReducer.ts","store/store.ts","index.tsx","Components/Task/Task.module.css","Components/TodoList/TodoList.module.css","Components/App.module.css"],"names":["module","exports","LoginValidateSchema","Yup","shape","email","required","password","Login","props","className","css","login","initialValues","rememberMe","captcha","validationSchema","onSubmit","values","actions","setFieldValue","validateOnMount","errors","touched","setTouched","title","inner","error","htmlFor","type","name","placeholder","id","row","captchaURL","src","alt","captchaField","submitBtn","useTempAcc","onClick","setCaptcha","url","payload","loginError","logoutSuccess","data","instance","axios","create","baseURL","headers","withCredentials","auth","me","a","get","response","loginFormData","post","logout","delete","console","log","initialState","isAuthorize","getAuthData","dispatch","resultCode","Error","messages","message","authReducer","state","action","connect","useEffect","todo","getTodoLists","getTodoListTasks","todoListId","pageSize","pageNumber","createNewTodoList","createNewTask","updateTodoListTitle","put","reorderTodoList","putAfterItemId","updateTask","taskId","taskFormData","reorderTask","deleteTodoList","deleteTask","setTodoLists","todoLists","setTodoListTasks","tasks","tasksCount","addNewTodoList","todoList","addNewTask","task","items","totalCount","todoReducer","DeleteIcon","size","xmlns","height","viewBox","width","d","fill","useState","flipped","setFlipped","deadline","setDeadline","taskWrapper","onMouseEnter","onMouseLeave","deadlineInput","value","split","onChange","e","target","NoData","CreateTaskValidationSchema","max","withRouter","item","match","params","createTaskMode","setCreateTaskMode","setPageSize","find","todoListWrapper","header","addDate","addedDate","content","createTask","autoFocus","button","disabled","length","sort","b","order","map","noTasks","noTasksText","loadMore","CreateIcon","LogoutIcon","createTodoMode","setCreateTodoMode","allTodoLists","list","to","todoTitle","deleteTodo","formTitle","onBlur","App","from","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e13b9d7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__Y4H-x\",\"title\":\"Login_title__2bl6j\",\"email\":\"Login_email__2CvsG\",\"password\":\"Login_password__1lhqy\",\"captchaField\":\"Login_captchaField__2WGPB\",\"inner\":\"Login_inner__2wjtE\",\"row\":\"Login_row__ILIwZ\",\"error\":\"Login_error__2-29G\",\"captcha\":\"Login_captcha__3gUov\",\"submitBtn\":\"Login_submitBtn__2t99h\",\"useTempAcc\":\"Login_useTempAcc__1_gBZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2VQ7O\",\"title\":\"Header_title__6MjOR\",\"list\":\"Header_list__33eP8\",\"todo\":\"Header_todo__F5O04\",\"todoTitle\":\"Header_todoTitle__1huCx\",\"deleteTodo\":\"Header_deleteTodo__DwsAT\",\"createNewTodoList\":\"Header_createNewTodoList__131sh\",\"formTitle\":\"Header_formTitle__2oWbA\",\"logout\":\"Header_logout__3qMIz\"};","import React from 'react';\r\nimport css from './Login.module.css';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoginFormData } from '../../types/authTypes';\r\n\r\nconst LoginValidateSchema = Yup.object().shape({\r\n  email: Yup.string().email('Incorrect email').required('Field is required'),\r\n  password: Yup.string().required('Field is required'),\r\n});\r\n\r\ninterface LoginFormValues {\r\n  email: string;\r\n  password: string;\r\n  rememberMe: boolean;\r\n  captcha: string;\r\n}\r\n\r\ninterface Props {\r\n  login: (loginData: LoginFormData) => void;\r\n  captchaURL: string;\r\n  error: string;\r\n}\r\n\r\nconst Login: React.FC<Props> = props => {\r\n  return (\r\n    <div className={css.login}>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: '',\r\n          rememberMe: false,\r\n          captcha: '',\r\n        }}\r\n        validationSchema={LoginValidateSchema}\r\n        onSubmit={(values: LoginFormValues, actions) => {\r\n          props.login(values);\r\n          actions.setFieldValue('captcha', '');\r\n        }}\r\n        validateOnMount={true}\r\n      >\r\n        {({ errors, touched, setFieldValue, setTouched }) => (\r\n          <Form>\r\n            <div className={css.title}>\r\n              <span>Login</span>\r\n            </div>\r\n            <div className={css.inner}>\r\n              {(errors.email && touched.email) || props.error ? (\r\n                <label htmlFor='password' className={css.error}>\r\n                  {errors.email || props.error}\r\n                </label>\r\n              ) : null}\r\n              <Field\r\n                type='email'\r\n                name='email'\r\n                placeholder='Email'\r\n                id='email'\r\n                className={css.email}\r\n              />\r\n            </div>\r\n\r\n            <div className={css.inner}>\r\n              {(errors.password && touched.password) || props.error ? (\r\n                <label htmlFor='email' className={css.error}>\r\n                  {errors.password || props.error}\r\n                </label>\r\n              ) : null}\r\n\r\n              <Field\r\n                type='password'\r\n                name='password'\r\n                placeholder='Password'\r\n                id='password'\r\n                className={css.password}\r\n              />\r\n            </div>\r\n\r\n            <div className={css.row}>\r\n              <Field\r\n                type='checkbox'\r\n                name='rememberMe'\r\n                id='rememberMe'\r\n                className={css.rememberMe}\r\n              />\r\n              <label htmlFor='rememberMe'>Remember me</label>\r\n            </div>\r\n            {props.captchaURL ? (\r\n              <div className={css.captcha}>\r\n                <div>\r\n                  <img src={props.captchaURL} alt='captcha' />\r\n                </div>\r\n\r\n                <Field\r\n                  type='text'\r\n                  name='captcha'\r\n                  id='captcha'\r\n                  placeholder='Enter captcha'\r\n                  className={css.captchaField}\r\n                />\r\n              </div>\r\n            ) : null}\r\n\r\n            <button type='submit' className={css.submitBtn}>\r\n              LOGIN\r\n            </button>\r\n\r\n            <div\r\n              className={css.useTempAcc}\r\n              onClick={() => {\r\n                setFieldValue('email', 'free@samuraijs.com');\r\n                setFieldValue('password', 'free');\r\n                setTouched({ email: false, password: false });\r\n              }}\r\n            >\r\n              <span>Use template account</span>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { AuthData, LoginFormData } from './../../types/authTypes';\r\nconst SET_AUTH_DATA_SUCCESS = 'actions/authActions/SET_AUTH_DATA_SUCCESS';\r\nconst SET_AUTH_DATA_ERROR = 'actions/authActions/SET_AUTH_DATA_ERROR';\r\nconst LOGOUT_SUCCESS = 'actions/authActions/LOGOUT_SUCCESS';\r\nconst SET_CAPTCHA = 'actions/authActions/SET_CAPTCHA';\r\nconst LOGIN_ERROR = 'actions/authActions/LOGIN_ERROR';\r\n\r\nexport const setAuthDataSuccess = (payload: AuthData) =>\r\n  ({\r\n    type: SET_AUTH_DATA_SUCCESS,\r\n    payload,\r\n  } as const);\r\n\r\nexport const setCaptcha = (url: string) =>\r\n  ({ type: SET_CAPTCHA, payload: url } as const);\r\n\r\nexport const setAuthDataError = (error: string) =>\r\n  ({ type: SET_AUTH_DATA_ERROR, payload: error } as const);\r\n  \r\nexport const loginError = (error: string) =>\r\n  ({ type: LOGIN_ERROR, payload: error } as const);\r\n\r\nexport const logoutSuccess = (data: {}) =>\r\n  ({ type: LOGOUT_SUCCESS, payload: data } as const);\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.1/',\r\n  headers: {\r\n    'API-KEY': 'a3f656c8-219b-497c-b91e-7723447501cd',\r\n  },\r\n  withCredentials: true,\r\n});\r\n\r\nexport default instance;\r\n","import {\r\n  AuthResponse,\r\n  LoginFormData,\r\n  LoginResponse,\r\n  LogoutResponse,\r\n} from './../types/authTypes';\r\nimport instance from './instance';\r\n\r\nconst auth = {\r\n  me: async () => {\r\n    const response = await instance.get<AuthResponse>('auth/me');\r\n    return response.data;\r\n  },\r\n\r\n  login: async (loginFormData: LoginFormData) => {\r\n    const response = await instance.post<LoginResponse>('auth/login', {\r\n      ...loginFormData,\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  logout: async () => {\r\n    const response = await instance.delete<LogoutResponse>('auth/login');\r\n    return response.data;\r\n  },\r\n\r\n  captchaURL: async () => {\r\n    const response = await instance.get('security/get-captcha-url');\r\n    console.log(response);\r\n    return response.data.url;\r\n  },\r\n};\r\n\r\nexport default auth;\r\n","import { RootState } from './../../../../weather-forecast/src/store/store';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { Action } from '../store';\r\nimport * as actions from '../actions/authActions';\r\nimport auth from '../../api/auth';\r\nimport { LoginFormData } from '../../types/authTypes';\r\n\r\nconst initialState = {\r\n  id: null as number | null,\r\n  email: '' as string,\r\n  login: '' as string,\r\n  isAuthorize: false as boolean,\r\n  captchaURL: '' as string,\r\n  error: '' as string,\r\n};\r\n\r\ntype AuthActions = ReturnType<Action<typeof actions>>;\r\ntype AuthState = typeof initialState;\r\n\r\nfunction authReducer(state = initialState, action: AuthActions): AuthState {\r\n  switch (action.type) {\r\n    case 'actions/authActions/SET_AUTH_DATA_SUCCESS':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthorize: true,\r\n      };\r\n\r\n    case 'actions/authActions/SET_AUTH_DATA_ERROR':\r\n      return {\r\n        ...state,\r\n        //!!!//\r\n      };\r\n\r\n    case 'actions/authActions/SET_CAPTCHA':\r\n      return {\r\n        ...state,\r\n        captchaURL: action.payload,\r\n      };\r\n\r\n    case 'actions/authActions/LOGOUT_SUCCESS':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthorize: false,\r\n      };\r\n\r\n    case 'actions/authActions/LOGIN_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype AuthThunk = ThunkAction<Promise<void>, RootState, unknown, AuthActions>;\r\n\r\nexport const getAuthData = (): AuthThunk => async dispatch => {\r\n  try {\r\n    const data = await auth.me();\r\n\r\n    if (data.resultCode === 0) {\r\n      dispatch(actions.setAuthDataSuccess(data.data));\r\n    } else {\r\n      throw new Error(...data.messages);\r\n    }\r\n  } catch (e) {\r\n    console.log(e.message);\r\n    dispatch(actions.setAuthDataError(e.message));\r\n  }\r\n};\r\n\r\nexport const login =\r\n  (loginFormData: LoginFormData): AuthThunk =>\r\n  async dispatch => {\r\n    try {\r\n      const data = await auth.login(loginFormData);\r\n      if (data.resultCode === 0) {\r\n        dispatch(getAuthData());\r\n      } else if (data.resultCode === 10) {\r\n        const url = await auth.captchaURL();\r\n        dispatch(actions.setCaptcha(url));\r\n        dispatch(actions.loginError(data.messages[0]));\r\n      } else {\r\n        throw new Error(data.messages[0]);\r\n      }\r\n    } catch (e) {\r\n      dispatch(actions.loginError(e.message));\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\nexport const logout = (): AuthThunk => async dispatch => {\r\n  try {\r\n    const data = await auth.logout();\r\n    if (data.resultCode === 0) {\r\n      dispatch(actions.logoutSuccess(data.data));\r\n    } else {\r\n      throw new Error(data.messages[0]);\r\n    }\r\n  } catch (e) {\r\n    console.log(e.message);\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { connect } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport Login from './Login';\r\nimport { RootState } from '../../store/store';\r\nimport { getAuthData, login } from '../../store/reducers/authReducer';\r\nimport { LoginFormData } from '../../types/authTypes';\r\n\r\ninterface MapStateProps {\r\n  captchaURL: string;\r\n  error: string;\r\n}\r\ninterface MapDispatchProps {\r\n  getAuthData: () => void;\r\n  login: (loginData: LoginFormData) => void;\r\n}\r\n\r\ntype Props = MapStateProps & MapDispatchProps;\r\n\r\nconst LoginContainer: React.FC<Props> = props => {\r\n  useEffect(() => props.getAuthData(), []);\r\n  return (\r\n    <Login\r\n      login={props.login}\r\n      captchaURL={props.captchaURL}\r\n      error={props.error}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): MapStateProps => ({\r\n  captchaURL: state.auth.captchaURL,\r\n  error: state.auth.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuthData, login })(LoginContainer);\r\n","import {\r\n  TaskResponse,\r\n  TasksResponse,\r\n  PostTodoListResponse,\r\n  TaskFormData,\r\n  GetTasksResponse,\r\n  ITodoList,\r\n} from '../types/todoTypes';\r\nimport instance from './instance';\r\n\r\nconst todo = {\r\n  getTodoLists: async () => {\r\n    const response = await instance.get<Array<ITodoList>>('todo-lists');\r\n\r\n    return response.data;\r\n  },\r\n\r\n  getTodoListTasks: async (\r\n    todoListId: string,\r\n    pageSize: number = 10,\r\n    pageNumber: number = 1\r\n  ) => {\r\n    const response = await instance.get<GetTasksResponse>(\r\n      `/todo-lists/${todoListId}/tasks?count=${pageSize}&page=${pageNumber}`\r\n    );\r\n    return response.data;\r\n  },\r\n\r\n  createNewTodoList: async (title: string) => {\r\n    const response = await instance.post<PostTodoListResponse>('todo-lists', {\r\n      title,\r\n    });\r\n\r\n    return response.data;\r\n  },\r\n\r\n  createNewTask: async (todoListId: string, title: string) => {\r\n    const response = await instance.post<TaskResponse>(\r\n      `todo-lists/${todoListId}/tasks`,\r\n      { title }\r\n    );\r\n\r\n    return response.data;\r\n  },\r\n\r\n  updateTodoListTitle: async (todoListId: string, title: string) => {\r\n    await instance.put(`todo-lists/${todoListId}`, { title });\r\n  },\r\n\r\n  reorderTodoList: async (todoListId: string, putAfterItemId: string) => {\r\n    await instance.put(`todo-lists/${todoListId}/reorder`, { putAfterItemId });\r\n  },\r\n\r\n  updateTask: async (\r\n    todoListId: string,\r\n    taskId: string,\r\n    taskFormData: TaskFormData\r\n  ) => {\r\n    const response = await instance.put<TasksResponse>(\r\n      `todo-lists/${todoListId}/tasks/${taskId}`,\r\n      { ...taskFormData }\r\n    );\r\n\r\n    return response.data;\r\n  },\r\n\r\n  reorderTask: async (\r\n    todoListId: string,\r\n    taskId: string,\r\n    putAfterItemId: string\r\n  ) => {\r\n    await instance.put(`todo-lists/${todoListId}/tasks/${taskId}/reorder`, {\r\n      putAfterItemId,\r\n    });\r\n  },\r\n\r\n  deleteTodoList: async (todoListId: string) => {\r\n    await instance.delete(`todo-lists/${todoListId}`);\r\n  },\r\n\r\n  deleteTask: async (todoListId: string, taskId: string) => {\r\n    await instance.delete(`todo-lists/${todoListId}/tasks/${taskId}`);\r\n  },\r\n};\r\n\r\nexport default todo;\r\n","import { ITask, ITodoList } from '../../types/todoTypes';\r\n\r\nconst SET_TODO_LISTS = 'actions/todoActions/SET_TODO_LISTS';\r\nconst SET_TODO_LIST_TASKS = 'actions/todoActions/SET_TODO_LIST_TASKS';\r\nconst ADD_NEW_TODO_LIST = 'actions/todoActions/ADD_NEW_TODO_LIST';\r\nconst ADD_NEW_TASK = 'actions/todoActions/ADD_NEW_TASK';\r\n\r\nexport const setTodoLists = (todoLists: Array<ITodoList>) =>\r\n  ({ type: SET_TODO_LISTS, payload: todoLists } as const);\r\n\r\nexport const setTodoListTasks = (tasks: Array<ITask>, tasksCount: number) =>\r\n  ({\r\n    type: SET_TODO_LIST_TASKS,\r\n    payload: { tasks, tasksCount },\r\n  } as const);\r\n\r\nexport const addNewTodoList = (todoList: ITodoList) =>\r\n  ({ type: ADD_NEW_TODO_LIST, payload: todoList } as const);\r\n\r\nexport const addNewTask = (task: ITask) =>\r\n  ({ type: ADD_NEW_TASK, payload: task } as const);\r\n","import { ThunkAction } from 'redux-thunk';\r\nimport { Action, RootState } from '../store';\r\nimport todo from '../../api/todo';\r\nimport * as actions from '../actions/todoActions';\r\nimport { ITask, ITodoList, TaskFormData } from '../../types/todoTypes';\r\n\r\ntype TodoAction = ReturnType<Action<typeof actions>>;\r\ntype TodoThunk = ThunkAction<Promise<void>, RootState, unknown, TodoAction>;\r\n\r\ninterface TodoState {\r\n  todoLists: Array<ITodoList>;\r\n  tasks: Array<ITask>;\r\n  tasksCount: number;\r\n}\r\n\r\nconst initialState: TodoState = {\r\n  todoLists: [],\r\n  tasks: [],\r\n  tasksCount: 0,\r\n};\r\n\r\nconst todoReducer = (state = initialState, action: TodoAction): TodoState => {\r\n  switch (action.type) {\r\n    case 'actions/todoActions/SET_TODO_LISTS':\r\n      return { ...state, todoLists: action.payload };\r\n\r\n    case 'actions/todoActions/ADD_NEW_TODO_LIST':\r\n      return {\r\n        ...state,\r\n        todoLists: [action.payload, ...state.todoLists],\r\n      };\r\n\r\n    case 'actions/todoActions/SET_TODO_LIST_TASKS':\r\n      return {\r\n        ...state,\r\n        tasks: action.payload.tasks,\r\n        tasksCount: action.payload.tasksCount,\r\n      };\r\n\r\n    case 'actions/todoActions/ADD_NEW_TASK':\r\n      return { ...state, tasks: [action.payload, ...state.tasks] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getTodoLists = (): TodoThunk => async dispatch => {\r\n  try {\r\n    const todoLists = await todo.getTodoLists();\r\n\r\n    dispatch(actions.setTodoLists(todoLists));\r\n  } catch (e) {\r\n    console.log(e.messages);\r\n  }\r\n};\r\n\r\nexport const getTodoListTasks =\r\n  (todoListId: string, pageSize?: number, pageNumber?: number): TodoThunk =>\r\n  async dispatch => {\r\n    try {\r\n      const data = await todo.getTodoListTasks(\r\n        todoListId,\r\n        pageSize,\r\n        pageNumber\r\n      );\r\n\r\n      const tasks = data.items;\r\n      const tasksCount = data.totalCount;\r\n\r\n      dispatch(actions.setTodoListTasks(tasks, tasksCount));\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\nexport const addNewTodoList =\r\n  (title: string): TodoThunk =>\r\n  async dispatch => {\r\n    try {\r\n      const data = await todo.createNewTodoList(title);\r\n\r\n      const todoList = data.data.item;\r\n\r\n      dispatch(actions.addNewTodoList(todoList));\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\nexport const deleteTodoList =\r\n  (todoListId: string): TodoThunk =>\r\n  async dispatch => {\r\n    try {\r\n      await todo.deleteTodoList(todoListId);\r\n      dispatch(getTodoLists());\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\nexport const updateTodoListTitle =\r\n  (todoListId: string, title: string): TodoThunk =>\r\n  async dispatch => {\r\n    try {\r\n      await todo.updateTodoListTitle(todoListId, title);\r\n      dispatch(getTodoLists());\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\nexport const addNewTask =\r\n  (todoListId: string, title: string): TodoThunk =>\r\n  async dispatch => {\r\n    try {\r\n      const data = await todo.createNewTask(todoListId, title);\r\n      const task = data.data.item;\r\n\r\n      if (data.resultCode === 0) {\r\n        dispatch(actions.addNewTask(task));\r\n        dispatch(getTodoListTasks(todoListId));\r\n      } else {\r\n        throw new Error(data.messages[0]);\r\n      }\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\nexport const updateTask =\r\n  (todoListId: string, taskId: string, taskFormData: TaskFormData): TodoThunk =>\r\n  async dispatch => {\r\n    try {\r\n      await todo.updateTask(todoListId, taskId, taskFormData);\r\n      dispatch(getTodoListTasks(todoListId));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\nexport const reorderTask =\r\n  (todoListId: string, taskId: string, putAfterItemId: string): TodoThunk =>\r\n  async dispatch => {\r\n    try {\r\n      await todo.reorderTask(todoListId, taskId, putAfterItemId);\r\n\r\n      dispatch(getTodoListTasks(todoListId));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\nexport const deleteTask =\r\n  (todoListId: string, taskId: string): TodoThunk =>\r\n  async dispatch => {\r\n    await todo.deleteTask(todoListId, taskId);\r\n\r\n    dispatch(getTodoListTasks(todoListId));\r\n  };\r\n\r\nexport default todoReducer;\r\n","import React from 'react';\r\n\r\nconst DeleteIcon: React.FC<{ size: string }> = ({ size }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      height={size}\r\n      viewBox='0 0 512 512'\r\n      width={size}\r\n    >\r\n      <path\r\n        d='m256 0c-141.164062 0-256 114.835938-256 256s114.835938 256 256 256 256-114.835938 256-256-114.835938-256-256-256zm0 0'\r\n        fill='#f44336'\r\n      />\r\n      <path\r\n        d='m350.273438 320.105469c8.339843 8.34375 8.339843 21.824219 0 30.167969-4.160157 4.160156-9.621094 6.25-15.085938 6.25-5.460938 0-10.921875-2.089844-15.082031-6.25l-64.105469-64.109376-64.105469 64.109376c-4.160156 4.160156-9.621093 6.25-15.082031 6.25-5.464844 0-10.925781-2.089844-15.085938-6.25-8.339843-8.34375-8.339843-21.824219 0-30.167969l64.109376-64.105469-64.109376-64.105469c-8.339843-8.34375-8.339843-21.824219 0-30.167969 8.34375-8.339843 21.824219-8.339843 30.167969 0l64.105469 64.109376 64.105469-64.109376c8.34375-8.339843 21.824219-8.339843 30.167969 0 8.339843 8.34375 8.339843 21.824219 0 30.167969l-64.109376 64.105469zm0 0'\r\n        fill='#fafafa'\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default DeleteIcon;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ITask, TaskFormData } from '../../types/todoTypes';\r\nimport css from './Task.module.css';\r\nimport {\r\n  reorderTask,\r\n  deleteTask,\r\n  updateTask,\r\n} from '../../store/reducers/todoReducer';\r\nimport DeleteIcon from '../SVG/DeleteIcon';\r\n\r\ninterface MapDispatchProps {\r\n  reorderTask: (\r\n    todoListId: string,\r\n    taskId: string,\r\n    putAfterItemId: string\r\n  ) => void;\r\n  deleteTask: (todoListId: string, taskId: string) => void;\r\n  updateTask: (\r\n    todoListId: string,\r\n    taskId: string,\r\n    taskFormData: TaskFormData\r\n  ) => void;\r\n}\r\n\r\ninterface OwnProps {\r\n  task: ITask;\r\n}\r\n\r\ntype Props = OwnProps & MapDispatchProps;\r\n\r\nconst Task: React.FC<Props> = props => {\r\n  const task = props.task;\r\n\r\n  const [flipped, setFlipped] = useState(false);\r\n  const [deadline, setDeadline] = useState<string>(props.task.deadline || '');\r\n\r\n  return (\r\n    <div className={css.taskWrapper}>\r\n      <div\r\n        className={css.task}\r\n        onMouseEnter={() => setFlipped(true)}\r\n        onMouseLeave={() => setFlipped(false)}\r\n      >\r\n        {flipped ? (\r\n          <>\r\n            <div className={css.deadline}>\r\n              <span>Deadline:</span>\r\n              {props.task.deadline ? (\r\n                <>\r\n                  <input\r\n                    className={css.deadlineInput}\r\n                    type='date'\r\n                    placeholder='Set deadline'\r\n                    value={deadline.split('T')[0]}\r\n                    onChange={e => {\r\n                      setDeadline(e.target.value);\r\n\r\n                      props.updateTask(props.task.todoListId, props.task.id, {\r\n                        ...props.task,\r\n                        deadline: e.target.value,\r\n                      });\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <input\r\n                    className={css.deadlineInput}\r\n                    type='date'\r\n                    placeholder='Set deadline'\r\n                    value={deadline}\r\n                    onChange={e => {\r\n                      setDeadline(e.target.value);\r\n                      props.updateTask(props.task.todoListId, props.task.id, {\r\n                        ...props.task,\r\n                        deadline: e.target.value,\r\n                      });\r\n                    }}\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={css.deleteTask}\r\n              onClick={() => props.deleteTask(task.todoListId, task.id)}\r\n            >\r\n              <DeleteIcon size={'17px'} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className={css.title}>{task.title}</div>\r\n            <div\r\n              className={css.deleteTask}\r\n              onClick={() => props.deleteTask(task.todoListId, task.id)}\r\n            >\r\n              <DeleteIcon size={'17px'} />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reorderTask, deleteTask, updateTask })(Task);\r\n","import React from 'react';\r\n\r\nconst NoData: React.FC<{ size: string }> = ({ size }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      height={size}\r\n      viewBox='0 -16 512 512'\r\n      width={size}\r\n    >\r\n      <path d='m92.308594 52.230469c0-13.871094-11.28125-25.152344-25.152344-25.152344s-25.15625 11.28125-25.15625 25.152344c0 13.871093 11.285156 25.15625 25.152344 25.15625 13.871094 0 25.15625-11.285157 25.15625-25.15625zm-25.152344 10.15625c-5.601562 0-10.15625-4.558594-10.15625-10.15625 0-5.597657 4.554688-10.152344 10.152344-10.152344 5.601562 0 10.15625 4.554687 10.15625 10.152344 0 5.597656-4.554688 10.15625-10.152344 10.15625zm0 0' />\r\n      <path d='m126.914062 77.386719c13.871094 0 25.15625-11.285157 25.15625-25.15625 0-13.871094-11.285156-25.152344-25.15625-25.152344-13.867187 0-25.152343 11.28125-25.152343 25.152344 0 13.871093 11.28125 25.15625 25.152343 25.15625zm0-35.308594c5.601563 0 10.15625 4.554687 10.15625 10.152344 0 5.597656-4.554687 10.15625-10.15625 10.15625-5.597656 0-10.152343-4.558594-10.152343-10.15625 0-5.597657 4.554687-10.152344 10.152343-10.152344zm0 0' />\r\n      <path d='m186.675781 77.386719c13.867188 0 25.152344-11.285157 25.152344-25.15625 0-13.871094-11.285156-25.152344-25.152344-25.152344-13.871093 0-25.15625 11.28125-25.15625 25.152344 0 13.871093 11.285157 25.15625 25.15625 25.15625zm0-35.308594c5.597657 0 10.152344 4.554687 10.152344 10.152344 0 5.597656-4.554687 10.15625-10.152344 10.15625-5.601562 0-10.15625-4.558594-10.15625-10.15625 0-5.597657 4.554688-10.152344 10.15625-10.152344zm0 0' />\r\n      <path d='m269.667969 59.730469h182.667969c4.140624 0 7.5-3.355469 7.5-7.5 0-4.140625-3.359376-7.5-7.5-7.5h-182.667969c-4.144531 0-7.5 3.359375-7.5 7.5 0 4.144531 3.355469 7.5 7.5 7.5zm0 0' />\r\n      <path d='m511.578125 26.164062c-.042969-.257812-.089844-.511718-.140625-.769531-.023438-.125-.046875-.253906-.074219-.382812-2.925781-14.253907-15.570312-25.011719-30.679687-25.011719h-449.367188c-17.265625 0-31.316406 14.046875-31.316406 31.316406v417.25c0 17.269532 14.050781 31.316406 31.316406 31.316406h449.367188c17.265625 0 31.316406-14.050781 31.316406-31.316406v-417.25c0-1.753906-.144531-3.472656-.421875-5.152344zm-30.894531 438.71875h-449.367188c-8.996094 0-16.316406-7.320312-16.316406-16.316406v-344.101562h41.808594c4.144531 0 7.5-3.359375 7.5-7.5 0-4.144532-3.355469-7.5-7.5-7.5h-41.808594v-58.148438c0-8.996094 7.320312-16.316406 16.316406-16.316406h449.367188c7.308594 0 13.511718 4.832031 15.582031 11.46875.019531.066406.039063.128906.058594.191406.058593.195313.109375.386719.160156.582032.019531.066406.035156.132812.050781.199218.046875.195313.09375.394532.132813.589844.082031.398438.148437.804688.199219 1.210938.019531.136718.035156.273437.046874.410156.058594.546875.085938 1.101562.085938 1.664062v58.148438h-412.191406c-4.140625 0-7.5 3.355468-7.5 7.5 0 4.140625 3.359375 7.5 7.5 7.5h412.191406v344.101562c0 8.996094-7.320312 16.316406-16.316406 16.316406zm0 0' />\r\n      <path d='m166.363281 298.246094c2.929688 2.929687 7.675781 2.925781 10.605469 0l14.695312-14.699219 14.699219 14.699219c2.929688 2.929687 7.675781 2.925781 10.605469 0 2.929688-2.929688 2.929688-7.679688 0-10.609375l-14.695312-14.695313 14.695312-14.695312c2.929688-2.929688 2.929688-7.679688 0-10.609375-2.929688-2.925781-7.679688-2.925781-10.605469 0l-14.699219 14.699219-14.695312-14.699219c-2.929688-2.925781-7.679688-2.925781-10.605469 0-2.929687 2.929687-2.929687 7.679687 0 10.609375l14.695313 14.695312-14.695313 14.695313c-2.929687 2.929687-2.929687 7.679687 0 10.609375zm0 0' />\r\n      <path d='m295.03125 298.246094c2.929688 2.929687 7.675781 2.925781 10.605469 0l14.695312-14.699219 14.699219 14.699219c2.929688 2.929687 7.675781 2.925781 10.605469 0 2.929687-2.929688 2.929687-7.679688 0-10.609375l-14.695313-14.695313 14.695313-14.695312c2.929687-2.929688 2.929687-7.679688 0-10.609375-2.929688-2.925781-7.679688-2.925781-10.605469 0l-14.699219 14.699219-14.695312-14.699219c-2.929688-2.925781-7.679688-2.925781-10.605469 0-2.929688 2.929687-2.929688 7.679687 0 10.609375l14.695312 14.695312-14.695312 14.695313c-2.929688 2.929687-2.929688 7.679687 0 10.609375zm0 0' />\r\n      <path d='m187.503906 359.773438h136.992188c4.140625 0 7.5-3.355469 7.5-7.5 0-4.140626-3.359375-7.5-7.5-7.5h-136.992188c-4.140625 0-7.5 3.359374-7.5 7.5 0 4.144531 3.359375 7.5 7.5 7.5zm0 0' />\r\n      <path d='m358.957031 178.355469h-20.457031v-14.875c0-13.765625-11.199219-24.964844-24.960938-24.964844h-115.078124c-13.761719 0-24.960938 11.199219-24.960938 24.964844v14.875h-20.457031c-26.492188 0-48.042969 21.554687-48.042969 48.042969v155.105468c0 26.488282 21.550781 48.042969 48.042969 48.042969h133.292969c4.140624 0 7.5-3.359375 7.5-7.5 0-4.144531-3.359376-7.5-7.5-7.5h-133.292969c-18.21875 0-33.042969-14.824219-33.042969-33.042969v-155.105468c0-18.21875 14.824219-33.042969 33.042969-33.042969h205.914062c18.21875 0 33.042969 14.824219 33.042969 33.042969v155.105468c0 18.21875-14.824219 33.042969-33.042969 33.042969h-44.625c-4.140625 0-7.5 3.355469-7.5 7.5 0 4.140625 3.359375 7.5 7.5 7.5h44.625c26.492188 0 48.042969-21.554687 48.042969-48.042969v-155.105468c0-26.488282-21.550781-48.042969-48.042969-48.042969zm-170.457031 0v-14.875c0-5.496094 4.46875-9.964844 9.960938-9.964844h115.074218c5.496094 0 9.964844 4.46875 9.964844 9.964844v14.875zm0 0' />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default NoData;\r\n","import React, { useEffect, useState } from 'react';\r\nimport css from './TodoList.module.css';\r\nimport Task from '../Task/Task';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { RootState } from '../../store/store';\r\nimport { ITask, ITodoList } from '../../types/todoTypes';\r\nimport { getTodoListTasks, addNewTask } from '../../store/reducers/todoReducer';\r\nimport NoData from '../SVG/NoData';\r\nimport * as Yup from 'yup';\r\n\r\nconst CreateTaskValidationSchema = Yup.object().shape({\r\n  title: Yup.string().max(100, 'Max length is 100 symbols'),\r\n});\r\n\r\ninterface withRouterProps {\r\n  todoListId: string;\r\n}\r\n\r\ninterface MapStateProps {\r\n  todoLists: Array<ITodoList>;\r\n  tasks: Array<ITask>;\r\n  tasksCount: number;\r\n}\r\n\r\ninterface MapDispatchProps {\r\n  getTodoListTasks: (\r\n    todoListId: string,\r\n    pageSize?: number,\r\n    pageNumber?: number\r\n  ) => void;\r\n  addNewTask: (todoListId: string, title: string) => void;\r\n}\r\n\r\ntype Props = MapStateProps &\r\n  MapDispatchProps &\r\n  RouteComponentProps<withRouterProps>;\r\n\r\nconst TodoList: React.FC<Props> = ({\r\n  todoLists,\r\n  tasks,\r\n  tasksCount,\r\n  getTodoListTasks,\r\n  ...props\r\n}) => {\r\n  useEffect(\r\n    () => getTodoListTasks(props.match.params.todoListId),\r\n    [props.match.params.todoListId]\r\n  );\r\n\r\n  const [createTaskMode, setCreateTaskMode] = useState<boolean>(false);\r\n  const [pageSize, setPageSize] = useState(10);\r\n\r\n  const todoList = todoLists.find(\r\n    todoList => todoList.id === props.match.params.todoListId\r\n  );\r\n\r\n  return (\r\n    <div className={css.todoListWrapper}>\r\n      <div className={css.todoList}>\r\n        <header className={css.header}>\r\n          <div className={css.title}>{todoList?.title}</div>\r\n          <div className={css.addDate}>{todoList?.addedDate.split('T')[0]}</div>\r\n        </header>\r\n        <div className={css.content}>\r\n          <div className={css.createTask}>\r\n            {createTaskMode ? (\r\n              <>\r\n                <Formik\r\n                  initialValues={{ title: '' }}\r\n                  onSubmit={(values: { title: string }) => {\r\n                    //@ts-ignore\r\n                    props.addNewTask(todoList?.id, values.title);\r\n                    setCreateTaskMode(false);\r\n                  }}\r\n                  validationSchema={CreateTaskValidationSchema}\r\n                >\r\n                  {({ errors, touched }) => (\r\n                    <Form>\r\n                      <div className={css.inner}>\r\n                        <Field\r\n                          name='title'\r\n                          placeholder='Task title...'\r\n                          autoFocus\r\n                        />\r\n                        {errors.title && (\r\n                          <div className={css.error}>{errors.title}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <button\r\n                        className={`${css.button} ${errors.title && css.error}`}\r\n                        disabled={!!errors.title}\r\n                        type='submit'\r\n                      >\r\n                        Create\r\n                      </button>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </>\r\n            ) : (\r\n              <button\r\n                className={css.button}\r\n                onClick={() => setCreateTaskMode(true)}\r\n              >\r\n                Create new task\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={css.tasks}>\r\n            {tasks.length !== 0 ? (\r\n              tasks\r\n                .sort((a, b) => (a.order > b.order ? 1 : -1))\r\n                .map(task => <Task key={task.id} task={task} />)\r\n            ) : (\r\n              <div className={css.noTasks}>\r\n                <span className={css.noTasksText}>No tasks yet</span>\r\n                <NoData size='100px' />\r\n              </div>\r\n            )}\r\n            <div\r\n              className={css.loadMore}\r\n              onClick={() => {\r\n                if (pageSize < tasksCount) {\r\n                  setPageSize(pageSize => pageSize + 10);\r\n                  //@ts-ignore\r\n                  getTodoListTasks(todoList?.id, pageSize + 10);\r\n                } else {\r\n                  setPageSize(10);\r\n                  //@ts-ignore\r\n                  getTodoListTasks(todoList?.id, 10);\r\n                }\r\n              }}\r\n            >\r\n              {tasksCount > 10 && (\r\n                <button>{pageSize < tasksCount ? `Load more` : `Hide`}</button>\r\n              )}\r\n            </div>\r\n            {console.log(pageSize, tasksCount, tasksCount)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  tasks: state.todo.tasks,\r\n  tasksCount: state.todo.tasksCount,\r\n  todoLists: state.todo.todoLists,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getTodoListTasks, addNewTask })(TodoList)\r\n);\r\n","import React from 'react';\r\n\r\nconst CreateIcon: React.FC<{ size: string }> = ({ size }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      height={size}\r\n      viewBox='0 0 426.66667 426.66667'\r\n      width={size}\r\n    >\r\n      <path d='m405.332031 192h-170.664062v-170.667969c0-11.773437-9.558594-21.332031-21.335938-21.332031-11.773437 0-21.332031 9.558594-21.332031 21.332031v170.667969h-170.667969c-11.773437 0-21.332031 9.558594-21.332031 21.332031 0 11.777344 9.558594 21.335938 21.332031 21.335938h170.667969v170.664062c0 11.777344 9.558594 21.335938 21.332031 21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938v-170.664062h170.664062c11.777344 0 21.335938-9.558594 21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0' />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CreateIcon;\r\n","import React from 'react';\r\n\r\nconst LogoutIcon: React.FC<{ size: string }> = ({ size }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      height={size}\r\n      viewBox='0 0 512.016 512'\r\n      width={size}\r\n    >\r\n      <path d='m496 240.007812h-202.667969c-8.832031 0-16-7.167968-16-16 0-8.832031 7.167969-16 16-16h202.667969c8.832031 0 16 7.167969 16 16 0 8.832032-7.167969 16-16 16zm0 0' />\r\n      <path d='m416 320.007812c-4.097656 0-8.191406-1.558593-11.308594-4.691406-6.25-6.253906-6.25-16.386718 0-22.636718l68.695313-68.691407-68.695313-68.695312c-6.25-6.25-6.25-16.382813 0-22.632813 6.253906-6.253906 16.386719-6.253906 22.636719 0l80 80c6.25 6.25 6.25 16.382813 0 22.632813l-80 80c-3.136719 3.15625-7.230469 4.714843-11.328125 4.714843zm0 0' />\r\n      <path d='m170.667969 512.007812c-4.566407 0-8.898438-.640624-13.226563-1.984374l-128.386718-42.773438c-17.46875-6.101562-29.054688-22.378906-29.054688-40.574219v-384c0-23.53125 19.136719-42.6679685 42.667969-42.6679685 4.5625 0 8.894531.6406255 13.226562 1.9843755l128.382813 42.773437c17.472656 6.101563 29.054687 22.378906 29.054687 40.574219v384c0 23.53125-19.132812 42.667968-42.664062 42.667968zm-128-480c-5.867188 0-10.667969 4.800782-10.667969 10.667969v384c0 4.542969 3.050781 8.765625 7.402344 10.28125l127.785156 42.582031c.917969.296876 2.113281.46875 3.480469.46875 5.867187 0 10.664062-4.800781 10.664062-10.667968v-384c0-4.542969-3.050781-8.765625-7.402343-10.28125l-127.785157-42.582032c-.917969-.296874-2.113281-.46875-3.476562-.46875zm0 0' />\r\n      <path d='m325.332031 170.675781c-8.832031 0-16-7.167969-16-16v-96c0-14.699219-11.964843-26.667969-26.664062-26.667969h-240c-8.832031 0-16-7.167968-16-16 0-8.832031 7.167969-15.9999995 16-15.9999995h240c32.363281 0 58.664062 26.3046875 58.664062 58.6679685v96c0 8.832031-7.167969 16-16 16zm0 0' />\r\n      <path d='m282.667969 448.007812h-85.335938c-8.832031 0-16-7.167968-16-16 0-8.832031 7.167969-16 16-16h85.335938c14.699219 0 26.664062-11.96875 26.664062-26.667968v-96c0-8.832032 7.167969-16 16-16s16 7.167968 16 16v96c0 32.363281-26.300781 58.667968-58.664062 58.667968zm0 0' />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LogoutIcon;\r\n","import React, { useState } from 'react';\r\nimport css from './Header.module.css';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport CreateIcon from '../SVG/CreateIcon';\r\nimport DeleteIcon from '../SVG/DeleteIcon';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { RootState } from '../../store/store';\r\nimport { connect } from 'react-redux';\r\nimport { ITodoList } from '../../types/todoTypes';\r\nimport {\r\n  addNewTodoList,\r\n  deleteTodoList,\r\n} from '../../store/reducers/todoReducer';\r\nimport { logout } from '../../store/reducers/authReducer';\r\nimport LogoutIcon from '../SVG/LogoutIcon';\r\n\r\ninterface MapStateProps {\r\n  todoLists: Array<ITodoList>;\r\n}\r\n\r\ninterface MapDispatchProps {\r\n  addNewTodoList: (title: string) => Promise<void>;\r\n  deleteTodoList: (todoListId: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\ntype Props = MapStateProps & MapDispatchProps;\r\n\r\nconst Header: React.FC<Props> = ({\r\n  todoLists,\r\n  addNewTodoList,\r\n  deleteTodoList,\r\n  logout,\r\n}) => {\r\n  const [createTodoMode, setCreateTodoMode] = useState(false);\r\n\r\n  return (\r\n    <header className={css.header}>\r\n      <div>\r\n        <div className={css.allTodoLists}>\r\n          <div className={css.title}>\r\n            <span>All todo lists</span>\r\n            <span>{`${todoLists.length} of 10`}</span>\r\n          </div>\r\n          <ul className={css.list}>\r\n            {todoLists\r\n              .sort((a, b) => (a.order < b.order ? -1 : 1))\r\n              .map(todoList => {\r\n                return (\r\n                  <li className={css.todo} key={todoList.id}>\r\n                    <NavLink to={`/todo-list/${todoList.id}`}>\r\n                      <div className={css.todoTitle} title={todoList.title}>\r\n                        {todoList.title}\r\n                      </div>\r\n                    </NavLink>\r\n                    <div\r\n                      className={css.deleteTodo}\r\n                      title={'Delete todo'}\r\n                      onClick={() => deleteTodoList(todoList.id)}\r\n                    >\r\n                      <DeleteIcon size={'13px'} />\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n        <div className={css.createNewTodoList}>\r\n          {createTodoMode ? (\r\n            <Formik\r\n              initialValues={{ title: '' }}\r\n              onSubmit={(values: { title: string }) => {\r\n                addNewTodoList(values.title);\r\n                setCreateTodoMode(false);\r\n              }}\r\n            >\r\n              <Form>\r\n                <Field\r\n                  className={css.formTitle}\r\n                  name='title'\r\n                  placeholder='Todo list title...'\r\n                  autoFocus\r\n                  onBlur={() => setCreateTodoMode(false)}\r\n                />\r\n              </Form>\r\n            </Formik>\r\n          ) : (\r\n            <>\r\n              <button onClick={() => setCreateTodoMode(true)}>\r\n                <CreateIcon size='20px' />\r\n                <span> Create new todo list</span>\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={css.logout}>\r\n        <button onClick={() => logout()} title='Logout'>\r\n          <LogoutIcon size={'25px'} />\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): MapStateProps => ({\r\n  todoLists: state.todo.todoLists,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addNewTodoList,\r\n  deleteTodoList,\r\n  logout,\r\n})(Header);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { RootState } from '../store/store';\r\nimport css from './App.module.css';\r\nimport LoginContainer from './Login/LoginContainer';\r\nimport TodoList from './TodoList/TodoList';\r\nimport Header from './Header/Header';\r\nimport { getTodoLists } from '../store/reducers/todoReducer';\r\nimport { ITodoList } from '../types/todoTypes';\r\n\r\ninterface MapStateProps {\r\n  isAuthorize: boolean;\r\n  todoLists: Array<ITodoList>;\r\n}\r\n\r\ninterface MapDispatchProps {\r\n  getTodoLists: () => void;\r\n}\r\n\r\ntype Props = MapStateProps & MapDispatchProps;\r\n\r\nconst App: React.FC<Props> = ({ isAuthorize, getTodoLists, todoLists }) => {\r\n  useEffect(() => getTodoLists(), []);\r\n\r\n  return (\r\n    <div className={css.App}>\r\n      {!isAuthorize ? (\r\n        <LoginContainer />\r\n      ) : (\r\n        <>\r\n          <Header />\r\n          <Switch>\r\n            {todoLists.length !== 0 && (\r\n              <Redirect from='/' exact to={`/todo-list/${todoLists[0].id}`} />\r\n            )}\r\n\r\n            <Route\r\n              path='/todo-list/:todoListId'\r\n              component={() => <TodoList />}\r\n            />\r\n            <Route path='*' component={() => <div></div>} />\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): MapStateProps => ({\r\n  isAuthorize: state.auth.isAuthorize,\r\n  todoLists: state.todo.todoLists,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTodoLists })(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport todoReducer from './todoReducer';\r\n\r\nconst rootReducer = combineReducers({ auth: authReducer, todo: todoReducer });\r\n\r\nexport default rootReducer;\r\n","import rootReducer from './reducers/rootReducer';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type RootReducer = typeof rootReducer;\r\n\r\nexport type Action<T> = T extends { [key: string]: infer U } ? U : never;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskWrapper\":\"Task_taskWrapper__2s-9Q\",\"task\":\"Task_task__pEb_3\",\"deleteTask\":\"Task_deleteTask__3tOIB\",\"deadlineInput\":\"Task_deadlineInput__2FnId\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListWrapper\":\"TodoList_todoListWrapper__2OfO8\",\"todoList\":\"TodoList_todoList__2hkRZ\",\"header\":\"TodoList_header__28vaY\",\"title\":\"TodoList_title__2z_qr\",\"addDate\":\"TodoList_addDate__2-uqj\",\"createTask\":\"TodoList_createTask__3p_2k\",\"button\":\"TodoList_button__2QhZs\",\"error\":\"TodoList_error__3YEss\",\"noTasks\":\"TodoList_noTasks__2nraw\",\"noTasksText\":\"TodoList_noTasksText__18eYc\",\"tasks\":\"TodoList_tasks__3aPpy\",\"loadMore\":\"TodoList_loadMore__3YF9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__tsoz7\"};"],"sourceRoot":""}